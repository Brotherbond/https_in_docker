events {
  worker_connections 1024;
}

http {
  server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/nginx/certs/localhost.crt;
    ssl_certificate_key /etc/nginx/certs/localhost.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
      proxy_buffering off;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_pass http://wordpress;



      ssl on;
      server_tokens off;
      ssl_certificate /etc/nginx/ssl/live/YOUR_DOMAIN/fullchain.pem;
      ssl_certificate_key /etc/nginx/ssl/live/YOUR_DOMAIN/privkey.pem;
      ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;
      ssl_buffer_size 8k;
      ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
      ssl_prefer_server_ciphers on;
      ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass http://frontend:3000;


      ssl on;
      # ssl_certificate /etc/ssl/certs/chained.pem;
      # ssl_certificate_key /etc/ssl/private/domain.key;
      ssl_certificate /code/cert.pem;
      ssl_certificate_key /code/domain.key;
      ssl_session_timeout 5m;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
      ssl_session_cache shared:SSL:50m;
      # ssl_dhparam /etc/ssl/certs/dhparam.pem;
      ssl_prefer_server_ciphers on;

    }

  }
}
